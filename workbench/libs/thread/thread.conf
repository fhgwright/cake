##begin config
version 0.1
libbasetype struct ThreadBase
##end config

##begin cdef
#include <libraries/thread.h>
##end cdef

##begin cdefprivate
#include "thread_intern.h"
##end cdefprivate

##begin functionlist
ThreadIdentifier CreateThread(ThreadFunction entry_point, void *data) (A0,A1)
BOOL WaitForThreadCompletion(ThreadIdentifier thread_id, void **result) (D0,A0)
BOOL DetachThread(ThreadIdentifier thread_id) (D0)
ThreadIdentifier CurrentThread() ()
Mutex CreateMutex() ()
BOOL DestroyMutex(Mutex mutex) (A0)
void LockMutex(Mutex mutex) (A0)
BOOL TryLockMutex(Mutex mutex) (A0)
void UnlockMutex(Mutex mutex) (A0)
ThreadCondition CreateThreadCondition() ()
BOOL DestroyThreadCondition(ThreadCondition cond) (A0)
BOOL WaitForThreadCondition(ThreadCondition cond, Mutex mutex) (A0,A1)
void SignalThreadCondition(ThreadCondition cond) (A0)
void BroadcastThreadCondition(ThreadCondition cond) (A0)
##end functionlist
