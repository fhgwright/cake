\chapter{Background}

\section{What is AROS ?}

Some time back in the year 1993, the situation for the Amiga looked
somewhat worse (doesn't it always ?) and some Amiga fans got together and
argued about what was to do to increase the acceptance for our beloved
machine. Immediately the main reason for the missing success of the Amiga
has been found: It's propagation or the lack thereof. The Amiga must become
a more widespread basis to make it more attractive for everyone - for the
users and the developers. So plans were made to reach this goal. During
this effort, all bugs of the OS of the Amiga should be fixed and it should
become an OS of the 90s. AOS was born.

But what is a bug ? And how should they be fixed ? What's the thing a
so-called \italics{modern} OS must have ? And how should they be
implemented into the Amiga OS ?

Two years later, people were still arguing about this and not even one line
of code had been written (or at least no one had ever seen that code). And
discussions were still of the pattern "we must have..." and someone
answered "read the old mails" or "this is impossible to do, because" which
was shortly followed by "you're wrong because" and this one was ripped
apart and so on.

In the winter of 1995, I (Aaron Digulla) was fed up with it and I posted an
RFC (request for comments) to the AOS mailing list in which I asked what the
minimal common ground might be. Several options were given and the
conclusion was that almost everyone would like to see an OS which is
compatible to OS 3.1 (Kickstart 40.68) on which further discussions could
be based upon to see what is possible and what is not.

So the work began and AROS was born.

\section{What is the goal of AROS ?}

AROS' goal is it to create an OS which

\begin{itemize}

\item is as compatible as possible to AmigaOS 3.1

\item can be ported to different kinds of CPUs, for example Intel x86,
PowerPC, Alpha, Sparc, HPPA and more.

\item should be binary compatible on Amiga and source compatible on any
other hardware

\item can run as a standalone version which boots directly from harddisk,
as an emulation which opens a window on an existing OS to develop software
and run Amiga and native applications at the same time and as a link
library which allows to create native applications with the comfort of the
AmigaOS

\end{itemize}

To reach this goal, we use a number of techniques. First of all, we make
heavy use of the Internet. You can participate in our project even if you
can write only one single OS function. The most current version of the
source is accessible 24h per day and patches can be merged into it at any
time. A small database with open tasks prevents all developers from doing
something twice.

\section{Who does AROS ?}

This is the current developer list. Please note that the EMail addresses of
all developers but the coordinator are missing. The reason for this is that
we want to protect the developers from junk mail. If you have something to
ask or say, contact coordinator \email{digulla@aros.fh-konstanz.de}.

\include{devlist.inc}

\if{html}{
\section{The current status}

\incverb{status.inc}
}

\section{Snapshots}

\largepic{A snapshot of the window of demowin}{pics/demowin.gif}

This window is opened with the \shell{demowin} demo program. It opens a
window and renders some graphics in it. You can click on the gadgets and
the program will tell you which gadget has been pressed. If you press the
gadget with the label "Complement", the sizes for the PropGadgets will
change. You can press a key and the program will show you the string which
is associated with that key. You can press the left, middle and right
mousebutton to draw lines in the window. To exit the demo, press the Escape
key or click on one of the "Exit" gadgets at the bottom.

\largepic{A snapshot of readicon}{pics/readicon.gif}

This shows the output of readicon. In the big window, you can see debugging
and informational output of the program. The small window shows the normal
and selected state of an icon and contains a gadget which has the icons'
images for its normal and selected images.

\section{The future}

These are things which are still to do:

\begin{itemize}
\item Use SDE - one binary which runs on any AROS hardware
\item Ports to PPC, HHPA, Sparc and Alpha
\end{itemize}

\section{Licensing AROS}

Several people asked us about to use parts of AROS or license the whole thing,
for example to give it along with a new computer. Here are the preliminary
ideas we have about how much we want for it. Note that our basic intentions
are simply to provide the computer community with a good OS and to prevent
anyone to make money with our hard work.

\begin{description}
\item{You are a PD developer or you ask no extra fee for AROS} Then AROS
is of course free for you, too. It doesn't matter if you use part of AROS
or the whole. All we ask is that you mention us.

If you sell computers with AROS, you don't have to pay anything extra if
the price for the machine with AROS is the same as without it.

\item{You want to use part of core of AROS for a commercial or shareware
product} Then you have to pay $1 (one dollar) per 10 lines of code or $1
(one dollar), whichever is more. You always have to pay for the whole
module with the code in it (core modules always contain only one function
per module). Comments count as code. If you want to calculate the cost of
some source, get the most recent version from an official source (eg. Aminet
or the AROS-FTP-Server) and use the UN*X command "wc -l" on the parts you want.
Then divide the result by 10 (rounding up). For example, the complete Exec
has at the time of the writing of this text 12409 lines. That would cost
you $1241.

The price has to be paid only once and it allows you to use all future
versions of that module in your code, so you also have bought all bugfixes
and enhancements. You may use your copy in any way you want.

\item{You want the whole thing and pay per sold unit} In this case,
the price for AROS is 50% of the difference to the unit without AROS. So
your computer costs $1000 without and you ask $100 for AROS, we want $50
from you. This license doesn't include the right to modify the AROS source
but it means that you can sell AROS and make profit from it.

\item{You want the whole thing and pay only once} If you take everything,
you have to pay half the price of all sources in \filename{AROS/config/}
and \filename{AROS/rom/}. That would be $2615 for 52301 lines of code
at the time of the writing of the text. For this price, you get a copy
of the source and the right to modify and/or sell it as you wish.

Updates to AROS are not free, though, but cheap. Each update costs
$100, no matter how big the update is. We define an update as a release
of AROS with a new version number. You only pay for updates you use, so
you can skip several releases and pay still only $100 when you want the
new source.

\end{description}

