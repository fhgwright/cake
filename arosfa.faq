AROSfA FAQ 1.3

This document gives answers to some (frequently) asked questions, and other
things to note when running AROSfA (AROS for Amiga).

 Q. How do I install AROSfA?
 A. After you extract the archive, you have a directory called "AROS". In
    this directory you will find system replacement modules, tools to boot
    and diagnose AROS, and AROS' current include files.

    If you "cd" to this directory, you can start AROS by running "boot".
    After you have reset your machine, AROS will be active.

 Q. I have all sorts of problems trying to use AROSfA. What gives?
 A. AROSfA is still in an alpha state. Currently we are trying to get some
    more diverse feedback about the configurations it runs on, and which
    configurations it causes problems with. Your error/bug reports are very
    welcome and help to improve AROS.

    If you have a problem, and you suspect one of the AROSfA modules is the
    cause of this, you can remove it from "boot.config", so it won't be
    loaded. Currently, the modules can be run independently from each other.

 Q. I have installed exec.strap, but now I get these weird blue and green
    stripes when booting.
 A. This is normal behaviour. Exec.strap uses these stripes to signal that it
    has started (blue stripes), and that is has patched exec.library (green
    stripes). It is a quick indication that AROS survived the reboot and is
    installing itself.

 Q. What should I expect to see if AROSfA works?
 A. Nothing out of the ordinary. If you install AROS, you should still be
    able to use your system as if AROS hadn't been installed. The goal of
    AROSfA is to be as transparently to the programs as possible. This
    binary compatibility makes it possible to run all of your old
    programs.
 
    If you have installed AROSfA, and some program of yours suddenly won't
    work anymore, then either that program is misbehaving and depending on
    quirks in the original OS, or there is something wrong in AROSfA. We
    would sure like to know about this.

 Q. Why is there no 68000 version?
 A. Some assembler-instructions that are in the 68020 and higher are not
    implemented on the 68000. Gcc, the c-compiler we use, uses small functions
    to implement this missing functionality on the 68000, but these functions
    are in a linker library. This linker library expects to be used together
    with one of the standard startup-files (*crt.o). We don't use these
    startup files, so the module cannot be successfully linked (unresolved
    references).
    If you know how to circumvent this, we would surely like to know! :)

 Q. I have Kickstart v37, and after I start AROS, the version is still v37!
    I thought AROS was supposed to completely mimick v39/v40?
 A. Unfortunately, the kickstart version is in ROM and there is no way for
    AROS to change it, so "version" still reports v37.

 Q. I've downloaded AROS, but I have some problems.
 A. We are continually improving AROS. Chances are your problem is already
    fixed. Updates for AROSfA modules are made available at the following
    support webpage:

    http://www.xs4all.nl/~ldp/aros/

    If the latest versions still have the problem, and there is no mention
    of it on the "known problems" list, we may not be aware that there is a
    problem. Why not tell us?

 Q. Why is there so little documentation?
 A. There actually is a lot more (technical) information in the sources, but
    since I'm a lousy doc writer (there, I admit it! :)), it hasn't been
    compiled into real docs.

 Q. So, what kind of system do you use to program AROS? Why does it work ok
    for you, but causes all kinds of problems for me?
 A. AROSfA is being developed on this system:
    - A1200/Blizzard A1230-IV/nofpu/2+8 meg RAM/maprom on
    - "setcpu cache burst"
    - "blizkick devs:kickstart localfast speedrom"
    - Kickstart 39.106, Workbench 40.42
    - setpatch 40.16 (14-02-1994)
    - muFS 40.11 (15-05-1994)
    - KingCON 68020+ 1.3 (31-05-1994) (completely replaces CON:/RAW:)
    - ToolManager 2.1 (16-05-1993)
    - MCP 1.22 wildstar/borderblank/noclick/formatprotect/rtpatch/assignprefs/
               promotor/cycletomenu

 Q. I have just run "boot", and now I use "printresmodules", but I can't spot
    the modules I have just loaded. Is something wrong?
 A. No, not at all. The "printresmodules" tool prints the system list of
    Resident Modules. The modules you have just installed will only be started
    during the next reset, so they won't show up in the list until then.

 Q. "boot" loads the modules into my chip ram! I'd rather have them in fast!
    What gives?
 A. AROS modules are loaded into RAM. The area of RAM they are loaded in has to
    be available very early during the system reset procedure. Some RAM boards
    that are not AutoConfig[tm] are late at adding their RAM to the system.
    Their RAM may not be available when some AROS modules want to be started,
    and the system may be jumping into nothingness, causing a crash.
    On OS39+, "boot" allocates memory of type MEMF_KICK. This attribute is given
    to memory that qualifies for this requirement. This may not help in all
    cases, but tools such as "blizkick localfast" may help.
    On OS37, this memory attribute was not implemented. "boot" has no way of
    knowing which memory it can use for the modules. For compatibility, it
    defaults to MEMF_CHIP, which is guaranteed to be available. You can force
    the modules to be loaded into fastmem by using "boot -f".

 Q. My viruskiller reports a possible virus when I'm running AROSfA.
 A. Your viruskiller is expressing a genuine concern. Viruses are known to use
    the same methods as AROS to be able to survive a reboot. To be more
    specific: AROS uses the KickTagPtr/KickMemPtr fields. If your viruskiller
    complains that something is using these fields, and you are running AROS,
    you can ignore the warning. Another type of program that uses these fields
    is the RAD:-drive.

 Q. I was using the RAD:-drive, but after I ran "boot -x" or "boot -X", it
    was no longer alive after a reset.
 A. Correct. RAD: uses these KickTagPtr/KickMemPtr fields of Execbase to
    survive a reboot, and "boot -x" and "boot -X" erase these fields in
    ExecBase. This causes RAD: to die during the reset.

END
