# $Id$
include $(TOP)/config/make.cfg

ifeq ("$(SHARED_GRAPHICS)","yes")
SPECIAL_CFLAGS	:= $(SHARED_CFLAGS)
else
SPECIAL_CFLAGS	:=
endif

LIBNAME 	:= graphics
OBJDIR		:=$(OSGENDIR)/$(LIBNAME)
LIB		:=$(LIBDIR)/lib$(LIBNAME).so

%prepare_shlib $(LIBNAME) $(SHARED_GRAPHICS)

INIT_FILE	:= $(LIBNAME)_init

FILES		:= $(LIBNAME)_functable intregions graphics_misc

END_FILE	:= $(LIBNAME)_endtag

FUNCTIONS	:= \
	addanimob \
	addbob \
	addfont \
	addvsprite \
	allocbitmap \
	allocraster \
	andrectregion \
	animate \
	askfont \
	bitmapscale \
	bltbitmap \
	bltclear \
	clearrectregion \
	clearregion \
	clonerastport \
	closefont \
	cbump \
	cmove \
	createrastport \
	cwait \
	deinitrastport \
	disposeregion \
	draw \
	drawellipse \
	extendfont \
	eraserect \
	freebitmap \
	freecoplist \
	freecprlist \
	freegbuffers \
	freeraster \
	freerastport \
	freevportcoplists \
	getapen \
	getbitmapattr \
	getbpen \
	getdrmd \
	getgbuffers \
	getoutlinepen \
	gfxassociate \
	gfxfree \
	gfxlookup \
	gfxnew \
	initgels \
	initgmasks \
	initmasks \
	initview \
	initvport \
	initrastport \
	loadrgb32 \
	loadrgb4 \
	move \
	newregion \
	openfont \
	orrectregion \
	polydraw \
	readpixel \
	rectfill \
	remfont \
	remvsprite \
	scalerdiv \
	scrollraster \
	setabpendrmd \
	setapen \
	setbpen \
	setcollision \
	setdrmd \
	setfont \
	setoutlinepen \
	setrast \
	setrgb32 \
	setrpattrsa \
	setwritemask \
	sortglist \
	stripfont \
	text \
	textextent \
	textfit \
	textlength \
	ucopperlistinit \
	waittof \
	weightamatch \
	writepixel \
	writepixelarray8 \
	xorrectregion

FSRCS := $(foreach f,$(FUNCTIONS),$(f).c)

PRE_FUNCS := $(FUNCTIONS)
%prepare_replace rom/graphics
%filter_replace FUNCTIONS
ALL_FILES := $(INIT_FILE) $(FILES) $(ADDITIONAL_OBJS) $(END_FILE)

DEPS  := $(foreach f,$(INIT_FILE) $(FILES) functions $(END_FILE),$(OBJDIR)/$(f).d)
OBJS  := $(foreach f,$(ALL_FILES),$(OBJDIR)/$(f).o)

#MM
kernel-graphics-linklib : show-flags $(LIB)
	@$(NOP)

$(LIB) : $(OBJDIR)/functions.o $(OBJS)
	%mklib_f

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

# MetaMake targets
#MM kernel-graphics : setup includes kernel-graphics-$(ARCH)-$(CPU)
kernel-graphics :
	@$(NOP)

#MM
setup :
	%mkdirs_q $(OBJDIR)

#MM includes-generate : setup-clib
includes-generate : setup $(OBJDIR)/headers.stamp

$(OBJDIR)/headers.stamp : $(FSRCS)
	@$(SCRIPTDIR)/genshared -clib -prefix $(TOP)/compiler/include $(FSRCS)
	@$(SCRIPTDIR)/genshared -defines -prefix $(TOP)/compiler/include $(FSRCS)
	@$(TOUCH) $@

#MM
clean ::
	$(RM) $(OBJDIR) *.err $(LIB) functions.*

$(OBJDIR)/%.o : %.c
	%compile_q

$(LIBNAME)_functable.c : $(foreach f,$(PRE_FUNCS),$(f).c) \
	    $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q Graphics

$(LIBNAME)_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q Graphics

$(OBJDIR)/$(LIBNAME)_init.o : libdefs.h

%additional_objs_rule
%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps
