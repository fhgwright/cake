#!/bin/sh
# Simple script to create host.cfg
#

if [ "x" = "x$1" -o "x" = "x$2" ]; then
    echo "Usage: $0 (-h|-m) <configfile>"
    echo "Writes the system specific things to <configfile>"
    echo "Either -h or -m must be specified. -h means to write"
    echo "a C header file with defines and -m means to write a"
    echo "config for make."
    exit 1
fi

type=`uname`
proc=`uname -m`

# Reasonable defaults
# $COMMON_CFLAGS - the compile-flags for objects that are a part of AROS.
# $APP_CFLAGS	 - the compile-flags for applications that will run under AROS
#		   (e.g. AROS/c/#?). If you do not define this, $COMMON_CFLAGS
#		   will be used.
# $GENMAP	 - Generate a linker map. Use like this:
#		   $(CC) options $(GENMAP) mapfile moreoptions
CC="cc"
COMMON_CFLAGS="-g"
RANLIB="ranlib"
GUI_LIBDIR=""
GUI_INCDIR=""
GUI_LIBFLAGS=""
MKDEPEND="makedepend"
FLAVOUR="emulation"
SHELL_LDFLAGS=""
GENMAP="-Xlinker -Map -Xlinker"

# Flags to link AROS binaries (ie. binaries which are to be started
# inside AROS). What we need is something like a shared lib: All
# references resolved but no startup-code added.
ILDFLAGS="-nostartfiles -nostdlib"

# If you need a special kind of assembler (eg. as), set $AS. If $AS is not
# set, $CC is used.
# Special flags for $AS are taken from $COMMON_AFLAGS, if it exists or
# from $COMMON_CFLAGS otherwise.
# If X11 is installed in a directory of it's own, you can specify that
# directory in $GUI_BASEDIR. $GUI_LIBDIR will then point to $GUI_BASEDIR/lib
# and $GUI_LDFLAGS will contain -L$GUI_LIBDIR. The same applies to $GUI_INCDIR.
# If only one part is in a nonstandard place (eg. the libs), you
# can set one of the $GUI_LIBDIR/GUI_INCDIRs, too.

case "$type" in
"Linux" )
	# The main compiler
	CC="gcc"
	# The CFLAGS usually to use (in addition to the includes and use flags)
	COMMON_CFLAGS="-Wall -g -O0"
	# CFLAGS to be used to link applications
	ILDFLAGS="-nostartfiles -nostdlib -Xlinker -i"
	# Which OS ?
	ARCH="linux"
	# Which CPU ?
	if [ "$proc" = "m68k" ]; then
	    CPU="m68k"
	    # How to generate dependency files
	    MKDEPEND="makedepend -D__GNUC__ -D__mc68000__ -D__linux__"
	else
	    CPU="i386"
	    MKDEPEND="makedepend -D__GNUC__ -Di386 -D__linux__"
	fi
	# Search this directory for GUI libs
	GUI_LIBDIR="/usr/X11R6/lib"
	# Link with these GUI libs
	GUI_LIBFLAGS="-lX11"
	# The flags usually passed to the assembler
	COMMON_AFLAGS="-x assembler-with-cpp"
	# Flags to compile objects for shared libs
	SHARED_CFLAGS="-fPIC"
	# Command to generate shared libs
	SHARED_AR="gcc -shared -o"
	# Required to link shared libraries in at runtime
	SHELL_LDFLAGS="-Xlinker -rpath -Xlinker ./lib"
	;;
"HP-UX" )
	COMMON_CFLAGS="-Aa -g"
	RANLIB="true"
	ARCH="hppa"
	CPU="hppa-emul"
	;;
"OSF1" )
	ARCH="decunix"
	CPU="axp-emul"
	;;
"FreeBSD" )
	ARCH="freebsd"
	CPU="i386"
	COMMON_CFLAGS="-Wall -O2"
	ILDFLAGS="-nostartfiles -nostdlib -Wl,-r,-n,-e,_entry"
	GUI_LIBDIR="/usr/X11R6/lib"
	GUI_INCDIR="/usr/X11R6/include"
	GUI_LIBFLAGS="-lX11"
	AS="gcc -pipe"
	CC="gcc -pipe"
	COMMON_AFLAGS="-x assembler-with-cpp"
	MKDEPEND="makedepend -D__GNUC__ -Di386"
	AWK="awk"
	MAKESHELL="/usr/local/bin/bash"
	CHECKUDS="nm -u"
	;;
"AmigaOS" )
	CC="gcc"
	COMMON_CFLAGS="-Wall -Wno-uninitialized -O2 -m68020 -fomit-frame-pointer"
	ARCH="amiga"
	CPU="m68k"
	MKDEPEND="makedepend -D__GNUC__ -D_AMIGA -DAMIGA"
# Sometimes, a .asm file contains versions of a certain routine for
# different processors. Use -m68060 as a highest common denominator.
# It is up to the coder of these routines to keep track of their
# instructions.
	COMMON_AFLAGS="-m68060 -x assembler-with-cpp"
	FLAVOUR="native"
	STRIP=strip
# Prevent the Amiga c:sort from being found when we really want the GNU sort
	SORT=/gg/bin/sort
# And another problem with old pdksh shells not knowing `test -e' and newer
# ones having problems. Just take the fileutils test
	TEST=/gg/bin/test
	;;
esac

if [ -n "$FLAVOURS" ]; then
    echo "On your hardware, AROS is available in these flavours:"
    echo
    t=1
    for flavour in $FLAVOURS ; do
	echo "    $t. $flavour"
	t=`expr $t + 1`
    done
    echo
    echo "Which flavour do you want (enter number) ?"
    read flavour
#   echo $flavour
    flavour=`echo $FLAVOURS | cut "-d " -f$flavour`
    if [ -z $flavour ]; then
	echo "Invalid input."
	exit 10
    fi
    FLAVOUR=$flavour
fi

out="$2.tmp"

case "$1" in
"-m" )
    echo "# This file is automatically generated if it doesn't exist" > $out
    echo "# DO NOT EDIT" >> $out
    echo "# Edit \$(TOP)/configure instead and delete this file" >> $out
    echo >> $out
    echo "SYS_CC := $CC" >> $out
    echo "COMMON_CFLAGS := $COMMON_CFLAGS" >> $out
    echo "ILDFLAGS := \$(CFLAGS) $ILDFLAGS" >> $out
    echo "RANLIB := $RANLIB" >> $out
    echo "ARCH := $ARCH" >> $out
    echo "CPU := $CPU" >> $out
    echo "FLAVOUR := $FLAVOUR" >> $out

    if [ -z "$AS" ]; then
	echo "SYS_AS := $CC" >> $out
    else
	echo "SYS_AS := $AS" >> $out
    fi
    if [ -n "$AWK" ]; then
	echo "AWK := $AWK" >> $out
    fi
    if [ -n "$MAKESHELL" ]; then
	echo "SHELL := $MAKESHELL" >> $out
    fi
    if [ -z "$COMMON_AFLAGS" ]; then
	echo "COMMON_AFLAGS := $COMMON_CFLAGS" >> $out
    else
	echo "COMMON_AFLAGS := $COMMON_AFLAGS" >> $out
    fi

    if [ -z "$APP_CFLAGS" ]; then
	echo "APP_CFLAGS := $COMMON_CFLAGS" >> $out
    else
	echo "APP_CFLAGS := $APP_CFLAGS" >> $out
    fi

    if [ -n "$GUI_BASEDIR" ]; then
	GUI_LIBDIR := $GUI_BASEDIR/lib
	GUI_INCDIR := $GUI_BASEDIR/include
    fi

    if [ -n "$GUI_LIBDIR" ]; then
	echo "GUI_LIBDIR := $GUI_LIBDIR" >> $out
	echo "GUI_LDFLAGS := -L$GUI_LIBDIR" >> $out
    else
	echo "GUI_LIBDIR := /usr/lib" >> $out
	echo "GUI_LDFLAGS :=" >> $out
    fi
    if [ -n "$GUI_INCDIR" ]; then
	echo "GUI_INCDIR := $GUI_INCDIR" >> $out
	echo "GUI_CCFLAGS := -I$GUI_INCDIR" >> $out
    else
	echo "GUI_INCDIR := /usr/include" >> $out
	echo "GUI_CCFLAGS :=" >> $out
    fi

    echo "GUI_LIBFLAGS := $GUI_LIBFLAGS" >> $out
    echo "MKDEPEND := $MKDEPEND" >> $out
    echo "SHELL_LDFLAGS := $SHELL_LDFLAGS" >> $out

    if [ -n "$SHARED_CFLAGS" ]; then
	echo "SHARED_CFLAGS := $SHARED_CFLAGS" >> $out
	echo "SHARED_AR := $SHARED_AR" >> $out
    fi

    echo "GENMAP := $GENMAP" >> $out

    # These change commands in config/make.cfg
    if [ -n "$RM" ]; then
	echo "RM := $RM" >> $out
    fi
    if [ -n "$CP" ]; then
	echo "CP := $CP" >> $out
    fi
    if [ -n "$MV" ]; then
	echo "MV := $MV" >> $out
    fi
    if [ -n "$ECHO" ]; then
	echo "ECHO := $ECHO" >> $out
    fi
    if [ -n "$MKDIR" ]; then
	echo "MKDIR := $MKDIR" >> $out
    fi
    if [ -n "$TOUCH" ]; then
	echo "TOUCH := $TOUCH" >> $out
    fi
    if [ -n "$AR" ]; then
	echo "AR := $AR" >> $out
    fi
    if [ -n "$AWK" ]; then
	echo "AWK := $AWK" >> $out
    fi
    if [ -n "$CHECKUDS" ]; then
	echo "CHECKUDS := $CHECKUDS" >> $out
    fi
    if [ -n "$SORT" ]; then
	echo "SORT := $SORT" >> $out
    fi
    if [ -n "$UNIQ" ]; then
	echo "UNIQ := $UNIQ" >> $out
    fi
    if [ -n "$FOR" ]; then
	echo "FOR := $FOR" >> $out
    fi
    if [ -n "$IF" ]; then
	echo "IF := $IF" >> $out
    fi
    if [ -n "$NOP" ]; then
	echo "NOP := $NOP" >> $out
    fi
    if [ -n "$CAT" ]; then
	echo "CAT := $CAT" >> $out
    fi
    if [ -n "$TEST" ]; then
	echo "TEST := $TEST" >> $out
    fi
    if [ -n "$STRIP" ]; then
	echo "STRIP := $STRIP" >> $out
    fi
    ;;
"-h" )
    echo "#ifndef AROS_CONFIG_H" > $out
    echo "#define AROS_CONFIG_H" >> $out
    echo "/*" >> $out
    echo "    This file is automatically generated if it doesn't exist" >> $out
    echo "    DO NOT EDIT" >> $out
    echo "    Edit \$(TOP)/configure instead and delete this file" >> $out
    echo "*/" >> $out
    echo >> $out
    echo "#define AROS_FLAVOUR_NATIVE           1" >> $out
    echo "#define AROS_FLAVOUR_STANDALONE       2" >> $out
    echo "#define AROS_FLAVOUR_EMULATION        4" >> $out
    echo "#define AROS_FLAVOUR_LINKLIB          8" >> $out
    echo "#define AROS_FLAVOUR_BINCOMPAT        16" >> $out
    echo >> $out
    case "$FLAVOUR" in
    "native" )
	echo "#define AROS_FLAVOUR  (AROS_FLAVOUR_NATIVE|AROS_FLAVOUR_BINCOMPAT)" >> $out
	;;
    "standalone" )
	echo "#define AROS_FLAVOUR  AROS_FLAVOUR_STANDALONE" >> $out
	;;
    "emulation" )
	if [ "$CPU" = "m68k" ]; then
	    echo "#define AROS_FLAVOUR  (AROS_FLAVOUR_EMULATION|AROS_FLAVOUR_BINCOMPAT)" >> $out
	else
	    echo "#define AROS_FLAVOUR  AROS_FLAVOUR_EMULATION" >> $out
	fi
	;;
    "linklib" )
	echo "#define AROS_FLAVOUR  AROS_FLAVOUR_LINKLIB" >> $out
	;;
    esac
    echo >> $out
    echo "#endif /* AROS_CONFIG_H */" >> $out
    ;;
esac

if cmp -s "$out" "$2"; then
    echo "$2 is unchanged"
    rm $out
else
    echo "Replacing $2 by $out"
    if [ -e "$2" ]; then
	mv "$2" "$2.bak"
    fi
    mv "$out" "$2"
fi

exit 0
