# $Id$
include $(TOP)/config/make.cfg

USER_INCLUDES := -I..

# Main function for asl.library. Need this apart as an anchor for the link:
INIT_FILE := asl_init

FILES := asl_functable filereqhooks basicfuncs dirlist fontreqhooks \
	dirlistfuncs

# Guarantee that this will go at the end of the file:
END_FILE := asl_endtag

FUNCTIONS := \
	allocfilerequest	\
	allocaslrequest 	\
	aslrequest		\
	freeaslrequest		\
	freefilerequest 	\
	requestfile


OBJDIR	:= $(GENDIR)/$(CURDIR)
OBJS	:= $(foreach f,$(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).o)

# The init and endskip object filenames
INITFUNC := $(OBJDIR)/$(INIT_FILE).o
ENDFUNC  := $(OBJDIR)/$(END_FILE).o

#MM workbench : setup includes linklibs
workbench : show-flags $(SLIBDIR)/asl.library

# ***** Native ***************
ifeq ($(FLAVOUR),native)

# Generate a map file
MAPGEN = -Xlinker -M

# Strip resulting binary
STRIP = strip

# ***** Not Native ***************
else

MAPGEN =
STRIP  = $(NOP)

# ***** END ***************
endif

%define_libs prelibs=-lasl

# The filename of the linklib
LIB := $(LIBDIR)/libasl.a

$(SLIBDIR)/asl.library : $(LIB) $(DEPLIBS) $(OBJS) $(INITFUNC) $(ENDFUNC)
	@$(ECHO) "Building $(notdir $@) ..."
	@$(CC) $(ILDFLAGS) $(MAPGEN) $(INITFUNC) $(LIBS) $(ENDFUNC) -o $@ 2>&1|tee asllib.map
	%checkuds
	@$(IF) $(TEST) ! -s asllib.map; then $(RM) asllib.map ; else $(NOP) ; fi
	@$(STRIP) $@

# Collect all functions in a linklib for fast linking:
$(LIB) : $(OBJS)
	@$(ECHO) "Adding functions to $(notdir $@) ..."
	@$(AR) $@ $?
	@$(RANLIB) $@

show-flags :
	@$(ECHO) "CFLAGS=$(CFLAGS)"

#MM
setup :
	%mkdirs_q $(OBJDIR) $(SLIBDIR)

#MM
clean ::
	$(RM) $(OBJDIR) *.err

$(OBJDIR)/%.o : %.c
	%compile_q

asl_functable.c : $(foreach f,$(FUNCTIONS),$(f).c) \
	    $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q Asl

asl_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q Asl

$(OBJDIR)/asl_init.o : libdefs.h

%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps $(foreach f,$(INIT_FILE) $(END_FILE) $(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).d)
