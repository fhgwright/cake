# $Id$
include $(TOP)/config/make.cfg

USER_INCLUDES	:= -I..

# This should maybe be set in $(TOP)/config/make.cfg instead
GADGETDIR	:= $(BINDIR)/Classes/Gadgets

# Main function for aroslist.class. Need this apart as an anchor for the link:
INIT_FILE	:= aroslist_init
FILES		:= aroslist_functable listclass helpfuncs

# Guarantee that this will go at the end of the file:
END_FILE	:= aroslist_endtag
FUNCTIONS	:=

OBJDIR	:= $(GENDIR)/$(CURDIR)
OBJS	:= $(foreach f,$(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).o)

# The init and endskip object filenames
INITFUNC := $(OBJDIR)/$(INIT_FILE).o
ENDFUNC  := $(OBJDIR)/$(END_FILE).o

CLASS := $(GADGETDIR)/aroslist.class

#MM workbench-classes-aroslist : setup includes
workbench-classes-aroslist : show-flags $(CLASS)
	@$(NOP)

%define_libs prelibs=-laroslist

# The filename of the linklib
LIB := $(LIBDIR)/libaroslist.a

$(CLASS) : $(LIB) $(DEPLIBS) $(OBJS) $(INITFUNC) $(ENDFUNC)
	@$(ECHO) "Building $(notdir $@) ..."
	@$(CC) $(ILDFLAGS) $(GENMAP) aroslistlib.map $(INITFUNC) $(LIBS) $(ENDFUNC) -o $@ 2>&1|tee aroslistlib.err
	%checkuds
	@$(IF) $(TEST) ! -s aroslistlib.err; then $(RM) aroslistlib.err ; else $(NOP) ; fi
	@$(STRIP) $@

# Collect all functions in a linklib for fast linking:
$(LIB) : $(OBJS)
	@$(ECHO) "Adding functions to $(notdir $@) ..."
	@$(AR) $@ $?
	@$(RANLIB) $@

show-flags :
	@$(ECHO) "CFLAGS=$(CFLAGS)"

#MM
setup :
	%mkdirs_q $(OBJDIR) $(GADGETDIR)

#MM
clean ::
	$(RM) $(OBJS) $(CLASS) *.err

$(OBJDIR)/%.o : %.c
	%compile_q

aroslist_functable.c : $(foreach f,$(FUNCTIONS),$(f).c) \
	    $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q AROSList

aroslist_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q AROSList

$(OBJDIR)/aroslist_init.o : libdefs.h

%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps $(foreach f,$(INIT_FILE) $(END_FILE) $(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).d)
