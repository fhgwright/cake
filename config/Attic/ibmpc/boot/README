Finally, the very first version of Native PC AROS. :-)))))

This is PRE-ALPHA version of Native PC AROS. I should rather call it PRE-ALPHA
bootloader. What do we have here? Look below.

bootsect.S	This is bootsector for floppy. Based on linux bootsect.S (sorry
		but in this code there is almost nothing to change...). I've
		written my own kernel loader. It's shorter than linux version.

setup.S		Again, based on linux. First it checks what CPU you have.
		setup continues only when 386 or better is detected.
		It detects drives, amount of memory, pointing device and
		32 bit APM BIOS. Then it sets up GDT and IDT tables for cpu,
		remaps IRQs. Then it resets fpu. After all initializations 
		it turns 32-bit protected mode on and jumps to the kernel
		at absolute address 0x00001000.
		NEW(23.12.98): The memory size is obsolete - kernel checks
		it on its own. Memory BUG removed. Now A20 is REALLY enabled.

video.S		Again (;-)))) based on linux. Detects video card, halts in case
		of not having VGA or better. Then it sets 80x30 mode and stores
		all parameters (cursor pos and other things).
		NEW(23.12.98): Video parameters are useless. Removed.

head.S		Name is based on linux ;-))). It is placed at abs addr 0x1000.
		Shortly - it sets everything up and calls main function written
		in C.
		NEW(23.12.98): There is some code which supports ColdReboot()
		function. Some bugs removed.

init.c		Nothing. Just contains main function. There will be AROS setup.
		NEW(23.12.98): Nowadays there is everything to make AROS work.
		ExecBase is prepared, the whole memory exists for AROS - you
		can use upto 16MB of "24bit memory" (with MEMF_CHIP or
		MEMF_24BITDMA flag) and upto 4079MB of "fast memory". At the end
		of the init InitCode is called.

tools/build.c	Almost copy of linux's image builder. See linux sources for more
		comments.

Nothing new will be added here. I hope ;-).

To compile AROS PC go to previous directory and type "make" or "make force" to
compile.
Aha! You should insert empty floppy to fd0 first.

Enjoy!