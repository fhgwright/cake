###############################################################
include $(TOP)/config/make.cfg

USER_INCLUDES := -I.

ifeq ("$(SHARED_MATHIEEESINGBAS)","yes")
SPECIAL_CFLAGS	:= $(SHARED_CFLAGS)
else
SPECIAL_CFLAGS	:=
endif

LIBNAME 	:= mathieeesingbas
OBJDIR		:= $(OSGENDIR)/$(LIBNAME)
LIB		:= $(LIBDIR)/lib$(LIBNAME).so

%prepare_shlib $(LIBNAME) $(SHARED_MATHIEEESINGBAS)


INIT_FILE	:= $(LIBNAME)_init
FILES		:= $(LIBNAME)_functable
END_FILE	:= $(LIBNAME)_endtag
FUNCTIONS	:= \
		    ieeespabs \
		    ieeespadd \
		    ieeespceil \
		    ieeespcmp \
		    ieeespdiv \
		    ieeespfix \
		    ieeespfloor \
		    ieeespflt \
		    ieeespmul \
		    ieeespneg \
		    ieeespsub \
		    ieeesptst
ALL_FILES	:= $(INIT_FILE) $(FILES) $(END_FILE)

OBJS := $(foreach f,$(ALL_FILES),$(OBJDIR)/$(f).o)

#MM
kernel-mathieeesingbas-$(ARCH)-$(CPU) : show-flags $(LIB)
	@$(NOP)

$(LIB) : $(OBJDIR)/functions.o $(OBJS)
	%mklib_f

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

#MM kernel-mathieeesingbas : setup includes kernel-mathieeesingbas-$(ARCH)-$(CPU)
kernel-mathieeesingbas :
	@$(NOP)

#MM
setup :
	%mkdirs_q $(OBJDIR)

#MM
clean ::
	$(RM) $(OBJDIR) *.err $(LIB) functions.*

$(OBJDIR)/%.o : %.c
	%compile_q

FUNCTABLE_SRCS := $(foreach f,$(FUNCTIONS),$(f).c)

#We absolutely need the script from BINDIR here instead of the one from TOP
$(LIBNAME)_functable.c : $(FUNCTABLE_SRCS) $(BINDIR)/scripts/genfunctable.awk \
	libdefs.h
	@$(ECHO) "Generating $@..."
	@$(AWK) -f $(BINDIR)/scripts/genfunctable.awk $(FUNCTABLE_SRCS) > $@

$(LIBNAME)_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q Mathieeesingbas

$(OBJDIR)/$(LIBNAME)_init.o : libdefs.h

#do NOT use the libdefs_rule here as we need the script from BINDIR instead
#of the one from TOP
libdefs.h : lib.conf $(BINDIR)/scripts/genlibdefs.awk
	@$(ECHO) "Generating $@..."
	@$(AWK) -f $(BINDIR)/scripts/genlibdefs.awk $< > $@

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps $(foreach f,$(ALL_FILES),$(OBJDIR)/$(f).d)
