\chapter{MetaMake}

MetaMake is a version of make which allows to recursively build targets
in the various directories of a project or even another project.

Usage: mmake [<options>] [<metatargets>]

Note: To use mmake, you need Tcl 7.6 or 8.0 (you should get 8.0 because
it's much faster then 7.6).

mmake reads a global config file "$HOME/.mmake.config". This file can
contain the following things:

    # This is a comment
    # Options before the first [name] are defaults. Use them for global
    # defaults
    defaultoption value

    # Special options for the project name. You can build targets for this
    # project with "mmake name.target"
    [AROS]
    # The root dir of the project. This can be accessed as $(TOP) in every
    # makefile or when you have to specify a path in mmake. The default is
    # the current directory
    top /home/digulla/AROS
    # This is the default name for Makefiles. The default is "Makefile"
    defaultmakefilename makefile
    # If you just say "mmake AROS", then mmake will go for this target
    defaulttarget AROS
    # mmake allows to generate makefiles with a script. The makefile
    # will be regenerated if it doesn't exist, if the source file is
    # newer or if the file specified with genmakefiledeps is newer.
    # The name of the source file is generated by concatenating
    # defaultmakefilename and ".src"
    genmakefilescript gawk -f $(TOP)/scripts/genmf.gawk --assign "TOP=$(TOP)"
    # If this file is newer than the makefile, the script
    # genmakefilescript will be executed.
    genmakefiledeps $(TOP)/scripts/genmf.gawk
    # mmake will read this file and every variable in this file will
    # be available everywhere where you can use a variable.
    globalvariables $(TOP)/config/host.cfg

    # Some makefiles must have a different name than
    # defaultmakefilename. You can add them manually here.
    #add compiler/include/makefile
    #add makefile

A metatarget look like so: "project.target". Example: AROS.setup.
If nothing is specified, mmake will make the default target of the
first project in the config file. If the project is specified but no
target, mmake will make the default target of this project.

mmake will look for all makefiles (regenerating them if necessary), check
which makefiles provide the metatargets you gave in the command line and on
which other metatargets that depend on those metatargets and will then
successively make all metatargets.

