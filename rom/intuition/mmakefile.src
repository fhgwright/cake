# $Id$
include $(TOP)/config/make.cfg

ifeq ("$(SHARED_INTUITION)","yes")
SPECIAL_CFLAGS	:= $(SHARED_CFLAGS)
else
SPECIAL_CFLAGS	:=
endif

OBJDIR		:= $(OSGENDIR)/intuition

%prepare_shlib intuition $(SHARED_INTUITION)

INIT_FILE	:= intuition_init

FILES		:= intuition_functable \
		    gadgets boolgadgets propgadgets boopsigadgets \
		    imageclass frameiclass sysiclass \
		    icclass \
		    gadgetclass buttongclass frbuttonclass propgclass \
		    notify requesters strgadgets strgclass

END_FILE	:= intuition_endtag

FUNCTIONS	:= \
	activatewindow \
	addclass \
	addgadget \
	addglist \
	allocremember \
	autorequest \
	beginrefresh \
	buildeasyrequestargs \
	changewindowbox \
	clearmenustrip \
	closescreen \
	closewindow \
	disposeobject \
	dogadgetmethoda \
	doubleclick \
	drawborder \
	drawimage \
	drawimagestate \
	easyrequestargs \
	endrefresh \
	eraseimage \
	freeclass \
	freeremember \
	freescreendrawinfo \
	freesysrequest \
	getattr \
	getdefaultpubscreen \
	getscreendata \
	getscreendrawinfo \
	lockibase \
	lockpubscreen \
	makeclass \
	modifyidcmp \
	modifyprop \
	movescreen \
	movewindow \
	nextobject \
	newmodifyprop \
	newobjecta \
	obtaingirport \
	offgadget \
	ongadget \
	openscreen \
	openscreentaglist \
	openwindow \
	openwindowtaglist \
	pointinimage \
	printitext \
	refreshgadgets \
	refreshglist \
	refreshwindowframe \
	releasegirport \
	removeclass \
	removegadget \
	removeglist \
	reportmouse \
	screentoback \
	screentofront \
	setattrsa \
	setdefaultpubscreen \
	setgadgetattrsa \
	setpointer \
	setwindowtitles \
	sizewindow \
	sysreqhandler \
	unlockibase \
	unlockpubscreen \
	windowlimits \
	windowtoback \
	windowtofront

PRE_FUNCS := $(FUNCTIONS)
%prepare_replace rom/intuition
%filter_replace FUNCTIONS
ALL_FILES := $(INIT_FILE) $(FILES) $(FUNCTIONS) $(ADDITIONAL_OBJS) $(END_FILE)

DEPS := $(foreach f,$(INIT_FILE) $(FILES) $(PRE_FUNCS) $(END_FILE),$(OBJDIR)/$(f).d)
OBJS := $(foreach f,$(ALL_FILES),$(OBJDIR)/$(f).o)

#MM
kernel-intuition-linux-$(CPU) : show-flags $(LIB)
	@$(NOP)

$(LIB) : $(OBJS)
	%mklib_q

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

# MetaMake targets
#MM kernel-intuition : setup includes intuition-$(ARCH) kernel-intuition-$(ARCH)-$(CPU)
kernel-intuition :
	@$(NOP)

#MM
setup :
	%mkdirs_q $(OBJDIR)

#MM
clean ::
	$(RM) $(OBJDIR) *.err $(LIB)

$(OBJDIR)/%.o : %.c
	%compile_q

intuition_functable.c : $(foreach f,$(PRE_FUNCS),$(f).c) \
	    $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q Intuition

intuition_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q Intuition

$(OBJDIR)/intuition_init.o : libdefs.h

%additional_objs_rule
%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps
