AROS PC - The Amiga Research OS for PC.

Finally! The real multitasking under PC. How does it work here? Just read
this file.

You all know that Amiga has preemptive multitasking (let's call it PMT). I
have used Timer interrupt (irq0) to do task switching. We can use also Real
Time Clock interurpts or Vertical Blank interrupts. Please don't blame me.
All EGA (and up) compatible cards HAVE TO supprot VBLANK. CirrusLogic based
cards seems to have VBLANK, S3 based cards have (I hope so...) a jumper
which enables this interrupt. Let's go back to the subject. During my
interrupt I save all registers (also FPU/MMX/3DNow! registers if you wish)
on the Supervisor Stack. Inside the Dispatch() function this CPU state is
stored in ETask structure. Then task switch occurs and new Context is copied
to the Supervisor Stack. And thats all. Interrupt ends, context (the NEW
one!) is restored and new task is running until next Timer int.

In near future I'll make use of Elapsed and Quantum from ExecBase.
