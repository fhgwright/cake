# $Id$
TOP=../../..
CURDIR=workbench/libs/mathtrans

USER_DEFINES = -D_AROS
USER_INCLUDES = -I.

include $(TOP)/config/make.cfg

# BEGIN_DESC{makefile}
# This is the makefile for mathtrans.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

# BEGIN_DESC{localmakevar}
# \item{FILES} This is a list of all files (without the .c) which
#	contain internal functions of the library (eg. libinit(),
#	libopen(), libexpunge() and the function table).
#
# \item{FUNCTIONS} This is a list of all files (without the .c)
#	with public functions of the library. The makefile will
#	strip all files from this list for which a special
#	version for this CPU does exist.
#
# END_DESC{localmakevar}

# Main function for mathtrans.library. Need this apart as an anchor for the link:
INIT_FILE = mathtrans_init

FILES = functable intern_spisodd intern_spld

# Guarantee that this will go at the end of the file:
END_FILE = endtag

FUNCTIONS = \
 	spsqrt \
 	spacos \
 	spasin \
 	spfieee \
 	sptieee \
 	splog \
 	splog10 \
 	spexp \
 	sppow \
 	spsinh \
 	spcosh \
 	sptanh \
 	spsincos \
 	spatan \
 	spsin \
 	spcos \
 	sptan

OBJDIR=$(GENDIR)/$(CURDIR)

OBJS = $(foreach f,$(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).o)

# The init and endskip object filenames
INITFUNC = $(OBJDIR)/$(INIT_FILE).o
ENDFUNC = $(OBJDIR)/$(END_FILE).o

all: setup $(SLIBDIR)/mathtrans.library

# ***** Native ***************
ifeq ($(FLAVOUR),native)

# Generate a map file
MAPGEN = -Xlinker -M

# Strip resulting binary
STRIP = strip

# ***** Not Native ***************
else

MAPGEN =
STRIP = true

# ***** END ***************
endif

%define_libs postlibs=-lamiga -lmathtrans

# The filename of the linklib
LIB=$(LIBDIR)/libmathtrans.a

$(SLIBDIR)/mathtrans.library: $(LIB) $(DEPLIBS) $(OBJS) $(INITFUNC) $(ENDFUNC)
	@echo "Building $(notdir $@)..."
	@$(CC) $(ILDFLAGS) $(MAPGEN) $(INITFUNC) $(LIBS) $(ENDFUNC) -o $@ 2>&1|tee mathtranslib.map
	@echo "Checking $(notdir $@)..."
	%checkuds
	@if test ! -s mathtranslib.map; then rm mathtranslib.map ; else true ; fi
	@$(STRIP) $@

# Collect all functions in a linklib for fast linking:
$(LIB): $(OBJS)
	@echo "Adding functions to $(notdir $@) ..."
	@$(AR) $@ $?
	@$(RANLIB) $@

setup :
	%mkdirs_q $(OBJDIR) $(SLIBDIR)

clean::
	$(RM) $(OBJDIR) *.err *.s

$(OBJDIR)/%.o: %.c
	%compile_q

%genlib

$(OBJDIR)/%.d: %.c
	%mkdepend_q

$(OBJDIR)/mathtrans_init.o: libdefs.h

%common
%include_deps $(foreach f,$(INIT_FILE) $(END_FILE) $(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).d)
