# $Id$
include $(TOP)/config/make.cfg

ifeq ("$(SHARED_AROS)","yes")
SPECIAL_CFLAGS := $(SHARED_CFLAGS)
else
SPECIAL_CFLAGS :=
endif

OBJDIR := $(OSGENDIR)/aros

# BEGIN_DESC{makefile}
# This is the makefile for aros.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

# BEGIN_DESC{localmakevar}
# \item{FILES} This is a list of all files (without the .c) which
#	contain internal functions of the library (eg. libinit(),
#	libopen(), libexpunge() and the function table).
#
# \item{FUNCTIONS} This is a list of all files (without the .c)
#	with public functions of the library. The makefile will
#	strip all files from this list for which a special
#	version for this CPU does exist.
#
# END_DESC{localmakevar}

# Main function for aros.library. Need this apart as an anchor for the link:
INIT_FILE := aros_init
# Guarantee that this will go at the end of the file:
END_FILE := aros_endtag

FILES := aros_functable

FUNCTIONS := arosinquirea

# Do the magic required for function replacement.
# Keep this value for later
ALL_FILES := $(FILES)
ALL_FUNCTIONS := $(FUNCTIONS)

%prepare_replace rom/aros
%filter_replace FUNCTIONS
%filter_replace FILES

DEPS := $(foreach f,$(INIT_FILE) $(FILES) $(FUNCTIONS) $(END_FILE),$(OBJDIR)/$(f).d)

%prepare_shlib aros $(SHARED_AROS)

# ***** Native ***************
ifeq ($(FLAVOUR),native)

# The options for the linker
LIBS := -L$(LIBDIR) -laros

# The names of the linklibs this depends on
LIBLIST := aros arosc

# The filenames of the linklibs this depends on
LIBDEPS := $(foreach f,$(LIBLIST),$(LIBDIR)/lib$(f).a)

OBJS := $(foreach f,$(FILES) $(FUNCTIONS) $(ADDITIONAL_OBJS),$(OBJDIR)/$(f).o)
INITFUNC := $(OBJDIR)/$(INIT_FILE).o
ENDFUNC := $(OBJDIR)/$(END_FILE).o

$(OSMODDIR)/aros.library : $(INITFUNC) $(ENDFUNC) $(OBJS) $(LIBDEPS)
	@echo "Building $(notdir $@) ..."
	@$(CC) $(ILDFLAGS) $(GENMAP) aroslib.map $(INITFUNC) $(LIBS) $(ENDFUNC) -o $@ 2>&1|tee aroslib.err
	@$(IF) $(TEST) ! -s aroslib.err; then rm aroslib.err ; else true ; fi
	@$(STRIP) $@

# ***** Not Native ***************
else

#MM kernel-aros-linklib :
kernel-aros-linklib : show-flags $(LIB)

OBJS := $(foreach f,$(INIT_FILE) $(FILES) $(FUNCTIONS) $(END_FILE) $(ADDITIONAL_OBJS),$(OBJDIR)/$(f).o)

# ***** END ***************
endif

$(LIB) : $(OBJS)
	%mklib_q
	@$(RM) $(RMLIB)

#MM
kernel-aros-amiga-m68k : $(OSMODDIR)/aros.library

#MM
kernel-aros-linux-$(CPU) : show-flags $(LIB)

# MetaMake targets
#MM kernel-aros : setup includes kernel-aros-$(ARCH)-$(CPU)
kernel-aros :
	@$(NOP)

#MM
setup :
	%mkdirs_q $(OSGENDIR) $(OBJDIR)

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

#MM
clean ::
	-$(RM) $(OBJDIR) *.err $(LIB) *.s

$(OBJDIR)/%.o : %.c
	%compile_q opt="$(SHARED_CFLAGS) $(CFLAGS)"

%asm_rule "$(FUNCTIONS) $(INIT_FILE) $(END_FILE) $(FILES)"

%ctoasm_q

%additional_objs_rule

aros_functable.c : $(foreach f,$(FUNCTIONS),$(f).c) $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q Aros

$(END_FILE).c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q Aros

$(OBJDIR)/aros_init.o : libdefs.h

%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps
