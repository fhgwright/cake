Compile instruction.
Needed tools:
  gcc 2.7.2.1 or someting like this
  cpak built in AROS/tools/cpak/ directory
  one empty floppy (720KB or 1.44MB)
  PC with linux
  rights to write /dev/fd0
  pice of time ;-)))

Step-by-step instruction:

1. Get full AROS. ibmpc project needs includes, libraries functions and
cpak programm.
2. If AROS tree was changed adjust Makefile placed in /config/ibmpc.
3. Insert enpty floppy into the A (/dev/fd0) drive.
4. Type "make all" to compile AROS. After succesfull compilation it will
be saved on floppy.
5. If you want to recompile it enter first "make clear" or just type "make
force" to force recompile.
6. Whilst compilation just pray ;-)))).

If everything went OK leave floppy in drive and press CTRL+ALT+DEL. Linux
will do shutdown, PC will restart and AROS will (I hope so) run. Don't
forget to change Boot order to something like "A,C" in BIOS setup (press
DEL at startup to check it).
If AROS wont start at first time turn PC off, then ON and check again. If
it still doesn't work ask me.

Now, if AROS starts you should see nice logo and some text about hardware.
AROS see whole memory (upto 4GB :-))) but it is divided into two sections:
first 16MB and rest. I did so because DMA sees only first 16MB of RAM.

At the top of the screen you SHOULD see flashing "T" letter. It shows
working testTask (at pri 0). You are in BootTask at this moment.

At this moment at the end of initialisation AROS enters Debug() (SAD...
but true! ;-))). This is simple emulation of Amiga SAD programm. Available
(at this moment) options are:
RE AAAAAAAA - reboots AROS - ColdReboot()
RS FFFFFFFF - RESET (doesn't work now)
FO - Forbid()
PE - Permit()
DI - Disable()
EN - Enable()
AM xxxxxxxx yyyyyyyy - AllocVec - size=xxxxxxxx, reguiments=yyyyyyyy
FM xxxxxxxx - FreeVec from xxxxxxxx
RB xxxxxxxx - read byte from xxxxxxxx
RW xxxxxxxx - read word from xxxxxxxx
RL xxxxxxxx - read long from xxxxxxxx
WB xxxxxxxx bb - write byte bb at xxxxxxxx
WW xxxxxxxx wwww - write word wwww at xxxxxxxx
WL xxxxxxxx llllllll - write long llllllll at xxxxxxxx
RA xxxxxxxx ssssssss - read array(ssssssss bytes long) from xxxxxxxx
RC xxxxxxxx ssssssss - read ascii (ssssssss bytes long) from xxxxxxxx
QT 00000000 - quit SAD.

After quitting SAD you should see next flashing letter at top of screen.
It shows that BootTask has nothing to do ;-)).

That's all for now. Please ENJOY!
