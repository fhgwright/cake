# $Id$
include $(TOP)/config/make.cfg

OBJDIR		:= $(GENDIR)/$(CURDIR)

LIBNAME 	:= utility
ULIBNAME	:= Utility

# Use OS's own includes over the ones from AROS
ifeq ("$(SHARED_UTILITY)","yes")
SPECIAL_CFLAGS	:= $(SHARED_CFLAGS)
else
SPECIAL_CFLAGS	:=
endif

USER_INCLUDES	:= -I.
#USER_DEFINES	 := -D_AROS

# BEGIN_DESC{makefile}
# This is the makefile for utility.library. Use it if you want to compile
# only this part of AROS.
# END_DESC{makefile}

# BEGIN_DESC{localmakevar}
# \item{FILES} This is a list of all files (without the .c) which
#	contain internal functions of the library (eg. libinit(),
#	libopen(), libexpunge() and the function table).
#
# \item{FUNCTIONS} This is a list of all files (without the .c)
#	with public functions of the library. The makefile will
#	strip all files from this list for which a special
#	version for this CPU does exist.
#
# END_DESC{localmakevar}

# Main function for exec.strap. Need this apart as an anchor for the link:
# Guarantee that this will go at the end of the file:
FILES		:= getnamespace intfindnamedobj
FUNCTIONS	:= \
	applytagchanges callhookpkt findtagitem nexttagitem stricmp strnicmp\
	tolower toupper getuniqueid date2amiga amiga2date allocatetagitems  \
	freetagitems clonetagitems gettagdata packbooltags taginarray	    \
	refreshtagitemclones maptags addnamedobject allocnamedobjecta	    \
	attemptremnamedobject findnamedobject namedobjectname		    \
	releasenamedobject remnamedobject freenamedobject packstructuretags \
	unpackstructuretags checkdate filtertagitems filtertagchanges	    \
	smult32 umult32 smult64 umult64 sdivmod32 udivmod32

# Do the magic required for function replacement.
# Keep this value for later
ALL_FILES	:= $(FILES)
ALL_FUNCTIONS	:= $(FUNCTIONS)

FUNCTABLE_SRCS  := $(foreach f,$(ALL_FUNCTIONS),$(f).c)

%prepare_replace rom/utility
%filter_replace FUNCTIONS
%filter_replace FILES

# The filename of the linklib or shared Linux lib
EXTRA_LIBS    := -L$(LIBDIR) -larosc
EXTRA_DEPLIBS := $(LIBDIR)/libarosc.a

%prepare_shlib utility $(SHARED_UTILITY)

%genromlib

# The following section builds a real "utility.library":

# The options for the linker
LINK_LIBS := -L$(LIBDIR) -lutility -larosc

# The names of the linklibs this depends on
LIBLIST := utility arosc

# The filenames of the linklibs this depends on
LIBDEPS := $(foreach f,$(LIBLIST),$(LIBDIR)/lib$(f).a)

# This will not put the endtag.o at the end of the lib, but must do for now.
ENDFUNC := 

$(OSMODDIR)/utility.library : $(INITFUNC) $(ENDFUNC) $(OBJS) $(LIBDEPS)
	@$(ECHO) "Building $(notdir $@) ..."
	@$(CC) $(ILDFLAGS) -Xlinker -M $(INITFUNC) $(LINK_LIBS) $(ENDFUNC) -o $@ 2>&1|tee utilitylib.map
	@if test ! -s utilitylib.map; then rm utilitylib.map ; else true ; fi
	@strip $@

#MM
kernel-utility-amiga-$(CPU) : show-flags $(OSMODDIR)/utility.library
	@$(NOP)

#MM
kernel-utility-linux-$(CPU) : show-flags $(LIB)
	@$(NOP)

#MM
kernel-utility-freebsd-$(CPU) : show-flags $(LIB)
	@$(NOP)

# MetaMake targets
#MM kernel-utility : setup includes utility-$(ARCH) linklibs kernel-utility-$(ARCH)-$(CPU)
kernel-utility :
	@$(NOP)

#MM setup
#MM clean

%asm_rule "$(FUNCTIONS) $(INIT_FILE) $(END_FILE) $(FILES)"

%ctoasm_q

DEPS := $(foreach f,$(SYS_FILES) $(FILES) $(FUNCTIONS),$(OBJDIR)/$(f).d)

%common
%include_deps

$(OBJDIR)/utility_init.o: libdefs.h
$(OBJDIR)/endtag.d: libdefs.h
