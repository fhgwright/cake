#!/bin/sh
# Simple script to create host.cfg
#

if [ -z "$1" ]; then
    echo "Usage: $0 <configfile>"
    echo "Writes the system specific things to <configfile>"
    exit 1
fi

type=`uname`
proc=`uname -m`

# Reasonable defaults
# $COMMON_CFLAGS - the compile-flags for objects that are a part of AROS.
# $APP_CFLAGS    - the compile-flags for applications that will run under AROS
#                  (e.g. AROS/c/#?). If you do not define this, $COMMON_CFLAGS
#                  will be used.
CC="cc"
COMMON_CFLAGS="-g"
RANLIB="ranlib"
GUI_LIBDIR=""
GUI_INCDIR=""
GUI_LIBFLAGS=""
MKDEPEND="makedepend"

# Flags to link AROS binaries (ie. binaries which are to be started
# inside AROS). What we need is something like a shared lib: All
# references resolved but no startup-code added.
ILDFLAGS="-nostartfiles -nostdlib"

# If you need a special kind of assembler (eg. as), set $AS. If $AS is not
# set, $CC is used.
# Special flags for $AS are taken from $COMMON_AFLAGS, if it exists or
# from $COMMON_CFLAGS otherwise.
# If X11 is installed in a directory of it's own, you can specify that
# directory in $GUI_BASEDIR. $GUI_LIBDIR will then point to $GUI_BASEDIR/lib
# and $GUI_LDFLAGS will contain -L$GUI_LIBDIR. The same applies to $GUI_INCDIR.
# If only one part is in a nonstandard place (eg. the libs), you
# can set one of the $GUI_LIBDIR/GUI_INCDIRs, too.

case "$type" in
"Linux" )
	CC="gcc"
	COMMON_CFLAGS="-Wall -g -O0"
	ILDFLAGS="-nostartfiles -nostdlib -Xlinker -i"
	ARCH="linux"
	if [ "$proc" = "m68k" ]; then
	    KERNEL="m68k-emul"
	    MKDEPEND="makedepend -D__GNUC__ -D__mc68000__"
	else
	    KERNEL="i386-emul"
	    MKDEPEND="makedepend -D__GNUC__ -Di386"
        fi
	GUI_LIBDIR="/usr/X11R6/lib"
	GUI_LIBFLAGS="-lX11"
	COMMON_AFLAGS="-x assembler-with-cpp"
	;;
"HP-UX" )
	COMMON_CFLAGS="-Aa -g"
	RANLIB="true"
	ARCH="hppa"
	KERNEL="hppa-emul"
	;;
"OSF1" )
	ARCH="decunix"
	KERNEL="axp-emul"
	;;
"FreeBSD" )
	ARCH="freebsd"
	KERNEL="i386-emul"
	COMMON_CFLAGS="-Wall -g -O2"
	ILDFLAGS="-nostartfiles -nostdlib"
	GUI_BASEDIR="/usr/X11R6"
	GUI_LIBFLAGS="-lX11"
	AS="gcc"
	COMMON_AFLAGS="-x assembler-with-cpp"
	;;
"AmigaOS" )
	CC="gcc"
	COMMON_CFLAGS="-Wall -O -m68020"
	ILDFLAGS="-nostartfiles -nostdlib"
	ARCH="amiga"
	KERNEL="m68k-native"
	MKDEPEND="makedepend -D__GNUC__ -D_AMIGA -DAMIGA"
	COMMON_AFLAGS="-m68020 -x assembler-with-cpp"
	;;
esac

echo "# This file is automatically generated if it doesn't exist" > $1
echo "# DO NOT EDIT" >> $1
echo "# Edit \$(TOP)/configure instead and delete this file" >> $1
echo >> $1
echo "SYS_CC = $CC" >> $1
echo "COMMON_CFLAGS = $COMMON_CFLAGS" >> $1
echo "ILDFLAGS = \$(CFLAGS) $ILDFLAGS" >> $1
echo "RANLIB = $RANLIB" >> $1
echo "ARCH = $ARCH" >> $1
echo "KERNEL = $KERNEL" >> $1

if [ -z "$AS" ]; then
    echo "SYS_AS = $CC" >> $1
else
    echo "SYS_AS = $AS" >> $1
fi
if [ -z "$COMMON_AFLAGS" ]; then
    echo "COMMON_AFLAGS = $COMMON_CFLAGS" >> $1
else
    echo "COMMON_AFLAGS = $COMMON_AFLAGS" >> $1
fi

if [ -z "$APP_CFLAGS" ]; then
    echo "APP_CFLAGS = $COMMON_CFLAGS" >> $1
else
    echo "APP_CFLAGS = $APP_CFLAGS" >> $1
fi

if [ -n "$GUI_BASEDIR" ]; then
    GUI_LIBDIR=$GUI_BASEDIR/lib
    GUI_INCDIR=$GUI_BASEDIR/include
fi

if [ -n "$GUI_LIBDIR" ]; then
    echo "GUI_LIBDIR = $GUI_LIBDIR" >> $1
    echo "GUI_LDFLAGS = -L$GUI_LIBDIR" >> $1
else
    echo "GUI_LIBDIR = /usr/lib" >> $1
    echo "GUI_LDFLAGS =" >> $1
fi
if [ -n "$GUI_INCDIR" ]; then
    echo "GUI_INCDIR = $GUI_INCDIR" >> $1
    echo "GUI_CCFLAGS = -I$GUI_INCDIR" >> $1
else
    echo "GUI_INCDIR = /usr/include" >> $1
    echo "GUI_CCFLAGS =" >> $1
fi

echo "GUI_LIBFLAGS = $GUI_LIBFLAGS" >> $1
echo "MKDEPEND = $MKDEPEND" >> $1

if [ -d config ]; then
    cd config ; make TOP=.. CURDIR=./config config
fi
