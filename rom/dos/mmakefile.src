# $Id$
include $(TOP)/config/make.cfg

OS_INCLUDES := -I$(GENINCDIR)
ifeq ("$(SHARED_DOS)","yes")
SPECIAL_CFLAGS := $(SHARED_CFLAGS)
endif

LIBNAME     := dos
ULIBNAME    := Dos
EXEDIR	    := $(BINDIR)/test
TESTOBJDIR  := $(GENDIR)/rom/dos
OBJDIR	    := $(OSGENDIR)/$(LIBNAME)
LIB	    := $(LIBDIR)/lib$(LIBNAME).so

%define_libs

%prepare_shlib $(LIBNAME) $(SHARED_DOS)

INIT_FILE   := $(LIBNAME)_init

FILES	    := $(LIBNAME)_functable lddemon errorlist internalloadseg_elf devname doname \
	       internalloadseg_aout internalloadseg_aos dosboot

END_FILE    := $(LIBNAME)_endtag

FUNCTIONS   := \
	abortpkt addbuffers adddosentry addpart addprocess addsegment	     \
	allocdosobject assignadd assignlate	       \
	assignlock assignpath attemptlockdoslist changemode checksignal cli  \
	cliinitnewcli cliinitrun close comparedates createdir createnewproc  \
	createproc currentdir datestamp datetostr	\
	delay deletefile deletevar deviceproc dopkt	\
	duplock endnotify errorreport	    \
	exall exallend examine execute exit exnext fault fgetc	   \
	fgets filepart findarg findcliproc finddosentry findsegment findvar  \
	flush format fputc fputs fread freeargs freedeviceproc	     \
	freedosentry freedosobject fwrite getargstr getconsoletask   \
	getcurrentdirname getdeviceproc getfilesystask getprogramdir	     \
	getprogramname getprompt getvar info inhibit input internalloadseg   \
	internalunloadseg ioerr isfilesystem isinteractive loadseg   \
	lock lockdoslist lockrecord lockrecords makedosentry	 \
	makelink matchend matchfirst matchnext matchpattern		     \
	matchpatternnocase maxcli namefromlock newloadseg	  \
	nextdosentry open openfromlock output parentdir    \
	parentoffh parsepattern parsepatternnocase pathpart printfault	     \
	putstr read readargs readitem readlink relabel remassignlist	     \
	remdosentry remsegment rename replypkt runcommand samedevice	     \
	samelock seek selectinput selectoutput sendpkt setargstr setcomment  \
	setconsoletask setcurrentdirname setfiledate setfilesize	     \
	setfilesystask setioerr setmode setowner setprogramdir		     \
	setprogramname setprompt setprotection setvar setvbuf splitname      \
	startnotify strtodate strtolong systemtaglist ungetc	      \
	unloadseg unlockdoslist unlockrecord unlockrecords vfprintf   \
	vfwritef vprintf waitforchar waitpkt write writechars \
	dosgetstring

PRE_FILES := $(FILES)
PRE_FUNCS := $(FUNCTIONS)
%prepare_replace rom/dos
%filter_replace FILES
%filter_replace FUNCTIONS

DEPS	    := $(foreach f,$(INIT_FILE) $(FILES) functions $(END_FILE),$(OBJDIR)/$(f).d)
ALL_FILES   := $(INIT_FILE) $(FILES) $(ADDITIONAL_OBJS) $(END_FILE)
OBJS	    := $(foreach f,$(ALL_FILES),$(OBJDIR)/$(f).o)

#MM
kernel-dos-linklib : show-flags $(LIB)
	@$(NOP)

show-flags :
	@echo "CFLAGS=$(CFLAGS)"

# MetaMake targets
#MM kernel-dos : setup-dos includes kernel-setup kernel-dos-$(ARCH)-$(CPU)
kernel-dos :
	@$(NOP)

#MM
setup-dos :
	%mkdirs_q $(OBJDIR) $(LIBDIR)

#MM
clean ::
	$(RM) $(OBJDIR) *.err $(LIB) \
	    $(LIBNAME)_functable.c $(LIBNAME)_endtag.c \
	    functions.*

TESTS := datetostr strtodate splitname readargs

#MM
check : setup-check $(foreach f,$(TESTS),$(EXEDIR)/$(f))

$(LIB) : $(OBJDIR)/functions.o $(OBJS)
	%mklib_f

$(EXEDIR)/% : %.c $(DEPLIBS)
	%link_q opt="$(ILDFLAGS) -DTEST $(COMMON_CFLAGS)"

setup-check :
	%mkdirs_q $(TESTOBJDIR) $(EXEDIR)

$(OBJDIR)/%.o : %.c
	%compile_q

$(LIBNAME)_functable.c : $(foreach f,$(PRE_FUNCS),$(f).c) \
	    $(TOP)/scripts/makefunctable.awk
	%mkfunctable_q $(ULIBNAME)

$(LIBNAME)_endtag.c : $(TOP)/scripts/makeendtag.awk
	%mkendtag_q $(ULIBNAME)

$(OBJDIR)/$(LIBNAME)_init.o : libdefs.h

%additional_objs_rule

%libdefs_rule

$(OBJDIR)/%.d : %.c
	%mkdepend_q

%common
%include_deps
